name: Flutter Build

on:
  push:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: 'android'
          - os: windows-latest
            platform: 'windows'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
  
      - name: Cache Flutter SDK
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.flutter
          key: flutter-sdk-${{ runner.os }}-${{ hashFiles('.github/workflows/flutter_version') }}
          restore-keys: |
            flutter-sdk-${{ runner.os }}-
  
      - name: Install Flutter
        run: |
          FLUTTER="$HOME/.flutter"
          echo "FLUTTER=$FLUTTER" >> $GITHUB_ENV
          echo "$FLUTTER/bin" >> $GITHUB_PATH
          if [ ! -f "$FLUTTER/bin/flutter" ]; then
            rm -rf "$FLUTTER"
            git clone https://github.com/flutter/flutter.git -b stable "$FLUTTER"
          else
            echo "Using cached Flutter SDK"
          fi
  
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.yaml', '**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-
            
      - name: Get Flutter packages
        run: flutter pub get
        
      - name: Cache Android SDK Build-Tools
        uses: actions/cache@v3
        with:
          path: |
            $ANDROID_HOME/build-tools
          key: build-tools-${{ runner.os }}-${{ hashFiles('path/to/lock/file') }}
          restore-keys: |
            build-tools-${{ runner.os }}-

      - name: Cache Android SDK Platforms
        uses: actions/cache@v3
        with:
          path: |
            $ANDROID_HOME/platforms
          key: platforms-${{ runner.os }}-${{ hashFiles('path/to/lock/file') }}
          restore-keys: |
            platforms-${{ runner.os }}-

      - name: Build APK
        if: matrix.platform == 'android'
        run: flutter build apk --release --target-platform android-arm

      # - name: Build App Bundle
      #   if: matrix.platform == 'android'
      #   run: flutter build appbundle --release
        
      - name: Build Linux
        if: matrix.platform == 'linux'
        run: flutter build linux --release
        
      - name: Build Windows
        if: matrix.platform == 'windows'
        run: flutter build windows --release

      - name: Upload APK Artifact
        if: matrix.platform == 'android'
        uses: actions/upload-artifact@v3
        with:
          name: android-app
          path: |
            build/app/outputs/flutter-apk/app-release.apk
          # build/app/outputs/bundle/release/app-release.aab

      - name: Upload Linux Artifact
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v3
        with:
          name: linux-app
          path: build/linux/*

      - name: Upload Windows Artifact
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v3
        with:
          name: windows-app
          path: build/windows/x64/runner/Release/*
