name: Flutter Build

on:
  push:
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.16.9'

jobs:
  setup:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: 'android'
            target-platform: 'android-arm64'
          - os: ubuntu-latest
            platform: 'linux'
          - os: windows-latest
            platform: 'windows'
          - os: macos-latest
            platform: 'ios'
          - os: macos-latest
            platform: 'macos'
    steps:
      - uses: actions/checkout@v3
      - name: Install Flutter SDK (Windows)
        if: matrix.platform == 'windows'
        run: |
          $FLUTTER = "$HOME\f\.flutter"
          $FLUTTER_BIN = "$FLUTTER\bin"
          echo "FLUTTER=$FLUTTER" | Out-File -Append -Encoding ASCII -FilePath $env:GITHUB_ENV
          echo "$FLUTTER_BIN" | Out-File -Append -Encoding ASCII -FilePath $env:GITHUB_PATH
          if (!(Test-Path "$FLUTTER_BIN\flutter")) {
            if (Test-Path "$FLUTTER") {
              Remove-Item "$FLUTTER" -Force -Recurse -ErrorAction SilentlyContinue
            }
            git clone --depth 1 -b $env:FLUTTER_VERSION https://github.com/flutter/flutter.git "$FLUTTER"
          }
          else {
            Write-Host "Using cached Flutter SDK"
          }
        shell: powershell
        env:
          GIT_TRACE: 1
          GIT_CURL_VERBOSE: 1

      - name: Install Flutter SDK 
        if: matrix.platform != 'windows'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - run: flutter pub get

      - name: Build for Android
        if: matrix.platform == 'android'
        run: flutter build apk --release --target-platform ${{ matrix.target-platform }}
       

      - name: Build for Linux
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
          flutter build linux --release
        
      - name: Build for Windows
        if: matrix.platform == 'windows'
        run: flutter build windows --release

      - name: Build for iOS
        if: matrix.platform == 'ios'
        run: flutter build ios --release --no-codesign

      - name: Build for macOS
        if: matrix.platform == 'macos'
        run: flutter build macos --release

      - name: Upload Artifact for Android
        if: matrix.platform == 'android'
        uses: actions/upload-artifact@v3
        with:
          name: android-app
          path: build/app/outputs/flutter-apk/app-release.apk
          
      - name: Upload Artifact for Linux 
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v3
        with:
          name: linux-app
          path: build/linux/*

      - name: Upload Artifact for Windows
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v3
        with:
          name: windows-app
          path: build/windows/x64/runner/Release/*

      - name: Upload Artifact for iOS
        if: matrix.platform == 'ios'
        uses: actions/upload-artifact@v3
        with:
          name: ios-app
          path: /Users/runner/work/wenznote/wenznote/build/ios/iphoneos/*.app

      - name: Upload Artifact for macOS
        if: matrix.platform == 'macos'
        uses: actions/upload-artifact@v3
        with:
          name: macos-app
          path: build/macos/Build/Products/Release/*
